// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchattenclownBot.Persistence.DatabaseAccess;

#nullable disable

namespace SchattenclownBot.Migrations
{
    [DbContext(typeof(TwitchNotifierDBA))]
    partial class TwitchNotifierDBAModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchattenclownBot.Integrations.Discord.Services.TwitchNotifier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("DiscordChannelID")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("DiscordGuildID")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("DiscordMemberID")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("DiscordRoleID")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("TwitchChannelUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TwitchUserID")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("ID");

                    b.ToTable("TwitchNotifiers");
                });
#pragma warning restore 612, 618
        }
    }
}
